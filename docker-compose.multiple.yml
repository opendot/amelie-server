version: '3.4'
services:

  redis:
    command: redis-server
    image: redis:alpine  

  db:
    image: 'mysql:5.7'
    environment:
      MYSQL_ROOT_PASSWORD: "VKikCMMgm2qg"
    volumes: 
      - db-datavolume:/var/lib/mysql

  api_remote:
    build:
      context: ./
      target: api_remote
    image: airett-server-remote
    command: bash -c "rm -f tmp/pids/server.pid && ruby bin/rails s -p 3002 -b '0.0.0.0' -e development_remote"
    volumes:
      - ./rails:/home/app/webapp
      - ./rails/tmp2:/home/app/webapp/tmp
    ports:
      - "3002:3002"
    environment:
      - TEST_ROUTES=remote
    depends_on:
      - db

  api_local:
    build:
      context: ./
      target: api_local
    image: airett-server-local
    command: bash -c "rm -f tmp/pids/server.pid && ruby bin/rails s -p 3001 -b '0.0.0.0' -e development_local"
    volumes:
      - ./rails:/home/app/webapp
    ports:
      - "3001:3001"
    environment:
      - TEST_ROUTES=local
      - PROCESS_PERSONAL_FILES=true
    depends_on:
      - db

  sidekiq_local:
    build:
      context: ./
      target: api_local
    image: airett-server-local
    volumes:
      - ./rails:/home/app/webapp
    depends_on:
      - db
      - redis
    command: bundle exec sidekiq -e development_local

  sidekiq_remote:
    build:
      context: ./
      target: api_remote
    image: airett-server-remote
    volumes:
      - ./rails:/home/app/webapp
    depends_on:
      - db
      - redis
    command: bundle exec sidekiq -e development_remote

  udp_responder_local:
    build:
      context: ./udp_responder
      dockerfile: udp_responder.dockerfile
    environment:
      - UDP_PORT=4001
    ports:
      - "0.0.0.0:4001:4001"
      - "0.0.0.0:4001:4001/udp"
    depends_on:
      - api_local
      - api_remote
      - sidekiq_local
      - sidekiq_remote
    restart: unless-stopped

volumes:
  db-datavolume: